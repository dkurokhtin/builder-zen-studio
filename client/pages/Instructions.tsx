import React, { useState } from "react";
import { Link } from "react-router-dom";
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { 
  ArrowLeft,
  Download, 
  ExternalLink,
  PlayCircle,
  CheckCircle,
  Smartphone,
  Laptop,
  Wifi
} from "lucide-react";

export default function Instructions() {
  const [activeStep, setActiveStep] = useState(0);

  const platforms = [
    {
      id: "android",
      name: "Android",
      icon: "ü§ñ",
      color: "bg-green-500",
      apps: [
        { name: "v2rayNG", recommended: true, link: "https://play.google.com/store/apps/details?id=com.v2ray.ang" },
        { name: "Nekoray", recommended: false, link: "https://github.com/MatsuriDayo/nekoray/releases" }
      ],
      steps: [
        "–°–∫–∞—á–∞–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ v2rayNG –∏–∑ Google Play",
        "–û—Ç–∫—Ä–æ–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏ –Ω–∞–∂–º–∏—Ç–µ '+' –≤ –ø—Ä–∞–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É",
        "–í—ã–±–µ—Ä–∏—Ç–µ '–ò–º–ø–æ—Ä—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∏–∑ –±—É—Ñ–µ—Ä–∞ –æ–±–º–µ–Ω–∞'",
        "–°–∫–æ–ø–∏—Ä—É–π—Ç–µ VPN-—Å—Å—ã–ª–∫—É –∏ –≤—Å—Ç–∞–≤—å—Ç–µ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ",
        "–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∏ –≤—ã–±–µ—Ä–∏—Ç–µ '–ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è'"
      ]
    },
    {
      id: "ios",
      name: "iOS",
      icon: "üçè", 
      color: "bg-blue-500",
      apps: [
        { name: "FoXray", recommended: true, link: "https://apps.apple.com/app/foxray/id6448898396" },
        { name: "Streisand", recommended: false, link: "https://apps.apple.com/app/streisand/id6450534064" }
      ],
      steps: [
        "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ FoXray –∏–∑ App Store",
        "–û—Ç–∫—Ä–æ–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏ –Ω–∞–∂–º–∏—Ç–µ '+' –∏–ª–∏ 'Add'",
        "–í—ã–±–µ—Ä–∏—Ç–µ 'Import from Clipboard' –∏–ª–∏ '–ò–º–ø–æ—Ä—Ç –∏–∑ –±—É—Ñ–µ—Ä–∞'",
        "–°–∫–æ–ø–∏—Ä—É–π—Ç–µ VPN-—Å—Å—ã–ª–∫—É –∏–∑ –±–æ—Ç–∞",
        "–ù–∞–∂–º–∏—Ç–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è"
      ]
    },
    {
      id: "windows",
      name: "Windows",
      icon: "üíª",
      color: "bg-blue-600",
      apps: [
        { name: "v2rayN", recommended: true, link: "https://github.com/2dust/v2rayN/releases" },
        { name: "Nekoray", recommended: false, link: "https://github.com/MatsuriDayo/nekoray/releases" }
      ],
      steps: [
        "–°–∫–∞—á–∞–π—Ç–µ v2rayN —Å GitHub (—Ñ–∞–π–ª v2rayN-Core.zip)",
        "–†–∞—Å–ø–∞–∫—É–π—Ç–µ –∞—Ä—Ö–∏–≤ –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ v2rayN.exe",
        "–ö–ª–∏–∫–Ω–∏—Ç–µ –ø—Ä–∞–≤–æ–π –∫–Ω–æ–ø–∫–æ–π –Ω–∞ –∑–Ω–∞—á–æ–∫ –≤ —Ç—Ä–µ–µ",
        "–í—ã–±–µ—Ä–∏—Ç–µ '–î–æ–±–∞–≤–∏—Ç—å —Å–µ—Ä–≤–µ—Ä' ‚Üí '–ò–º–ø–æ—Ä—Ç —Å—Å—ã–ª–∫–∏ –∏–∑ –±—É—Ñ–µ—Ä–∞ –æ–±–º–µ–Ω–∞'",
        "–°–∫–æ–ø–∏—Ä—É–π—Ç–µ VPN-—Å—Å—ã–ª–∫—É –∏ –Ω–∞–∂–º–∏—Ç–µ OK, –∑–∞—Ç–µ–º '–ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è'"
      ]
    },
    {
      id: "macos",
      name: "macOS", 
      icon: "üçé",
      color: "bg-gray-700",
      apps: [
        { name: "FoXray", recommended: true, link: "https://apps.apple.com/app/foxray/id6448898396" },
        { name: "V2rayU", recommended: false, link: "https://github.com/yanue/V2rayU/releases" }
      ],
      steps: [
        "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ FoXray –∏–∑ Mac App Store",
        "–û—Ç–∫—Ä–æ–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏ –Ω–∞–∂–º–∏—Ç–µ '+' –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–µ—Ä–≤–µ—Ä–∞",
        "–í—ã–±–µ—Ä–∏—Ç–µ 'Import from Clipboard'",
        "–°–∫–æ–ø–∏—Ä—É–π—Ç–µ VPN-—Å—Å—ã–ª–∫—É –∏–∑ Telegram –±–æ—Ç–∞",
        "–í—ã–±–µ—Ä–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä –∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è"
      ]
    },
    {
      id: "linux",
      name: "Linux",
      icon: "üêß",
      color: "bg-yellow-600",
      apps: [
        { name: "Nekoray", recommended: true, link: "https://github.com/MatsuriDayo/nekoray/releases" },
        { name: "v2ray-core", recommended: false, link: "https://github.com/v2fly/v2ray-core/releases" }
      ],
      steps: [
        "–°–∫–∞—á–∞–π—Ç–µ Nekoray AppImage —Å GitHub",
        "–°–¥–µ–ª–∞–π—Ç–µ —Ñ–∞–π–ª –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–º: chmod +x nekoray-*.AppImage",
        "–ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: ./nekoray-*.AppImage",
        "–ù–∞–∂–º–∏—Ç–µ 'Add' –∏ –≤—ã–±–µ—Ä–∏—Ç–µ 'Import from clipboard'",
        "–í—Å—Ç–∞–≤—å—Ç–µ VPN-—Å—Å—ã–ª–∫—É –∏ –Ω–∞–∂–º–∏—Ç–µ 'Start'"
      ]
    }
  ];

  const troubleshooting = [
    {
      problem: "–ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è",
      solution: "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –∞–∫ÔøΩÔøΩ–∏–≤–Ω–∞ –ª–∏ –ø–æ–¥–ø–∏—Å–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É.",
      icon: "üîß"
    },
    {
      problem: "–ù–∏–∑–∫–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å",
      solution: "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å—Å—è –Ω–∞ –¥—Ä—É–≥–æ–π —Å–µ—Ä–≤–µ—Ä –∏–ª–∏ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –∑–∞–≥—Ä—É–∑–∫—É —Å–µ—Ç–∏.",
      icon: "‚ö°"
    },
    {
      problem: "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è",
      solution: "–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–µ—Ä—Å–∏—é –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.",
      icon: "üîÑ"
    }
  ];

  return (
    <div className="min-h-screen bg-gradient-to-br from-telegram-blue/5 via-white to-green-500/5">
      {/* Header */}
      <div className="bg-white/80 backdrop-blur-sm border-b border-gray-100 sticky top-0 z-50">
        <div className="max-w-md mx-auto px-4 py-3">
          <div className="flex items-center justify-between">
            <div className="flex items-center space-x-3">
              <Link to="/">
                <Button variant="ghost" size="sm" className="p-2">
                  <ArrowLeft className="w-5 h-5" />
                </Button>
              </Link>
              <div>
                <h1 className="font-semibold text-foreground">–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏</h1>
                <p className="text-xs text-gray-500">–ù–∞—Å—Ç—Ä–æ–π–∫–∞ VPN –Ω–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö</p>
              </div>
            </div>
          </div>
        </div>
      </div>

      <div className="max-w-md mx-auto px-4 py-6 space-y-6">
        
        {/* Quick Start Card */}
        <Card className="bg-gradient-to-r from-telegram-blue to-green-500 text-white border-0 shadow-lg">
          <CardHeader className="pb-4">
            <CardTitle className="text-white flex items-center">
              <PlayCircle className="w-5 h-5 mr-2" />
              –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç
            </CardTitle>
            <CardDescription className="text-white/80">
              –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–π–º—ë—Ç –≤—Å–µ–≥–æ 2-3 –º–∏–Ω—É—Ç—ã
            </CardDescription>
          </CardHeader>
          <CardContent className="pt-0">
            <div className="grid grid-cols-3 gap-2 text-center text-sm">
              <div className="flex flex-col items-center">
                <div className="w-8 h-8 bg-white/20 rounded-full flex items-center justify-center mb-1">
                  <Download className="w-4 h-4" />
                </div>
                <span>–°–∫–∞—á–∞—Ç—å</span>
              </div>
              <div className="flex flex-col items-center">
                <div className="w-8 h-8 bg-white/20 rounded-full flex items-center justify-center mb-1">
                  <Wifi className="w-4 h-4" />
                </div>
                <span>–ù–∞—Å—Ç—Ä–æ–∏—Ç—å</span>
              </div>
              <div className="flex flex-col items-center">
                <div className="w-8 h-8 bg-white/20 rounded-full flex items-center justify-center mb-1">
                  <CheckCircle className="w-4 h-4" />
                </div>
                <span>–ì–æ—Ç–æ–≤–æ</span>
              </div>
            </div>
          </CardContent>
        </Card>

        {/* Platform Selection */}
        <Tabs defaultValue="android" className="w-full">
          <TabsList className="grid w-full grid-cols-3 mb-6">
            <TabsTrigger value="android" className="text-xs">üì± –ú–æ–±–∏–ª—å–Ω—ã–µ</TabsTrigger>
            <TabsTrigger value="windows" className="text-xs">üíª –ö–æ–º–ø—å—é—Ç–µ—Ä</TabsTrigger>
            <TabsTrigger value="other" className="text-xs">üìñ –î—Ä—É–≥–∏–µ</TabsTrigger>
          </TabsList>

          <TabsContent value="android" className="space-y-4">
            {platforms.filter(p => ["android", "ios"].includes(p.id)).map((platform) => (
              <Card key={platform.id} className="border-gray-100">
                <CardHeader>
                  <CardTitle className="text-lg text-foreground flex items-center">
                    <span className="text-2xl mr-3">{platform.icon}</span>
                    –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è {platform.name}
                  </CardTitle>
                  <CardDescription>
                    –ü–æ—à–∞–≥–æ–≤–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ VPN –Ω–∞ {platform.name}
                  </CardDescription>
                </CardHeader>
                <CardContent className="space-y-4">
                  {/* Recommended Apps */}
                  <div>
                    <h4 className="font-medium text-foreground mb-2">–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:</h4>
                    <div className="space-y-2">
                      {platform.apps.map((app, index) => (
                        <div key={index} className="flex items-center justify-between p-2 bg-gray-50 rounded-lg">
                          <div className="flex items-center space-x-2">
                            <span className="font-medium">{app.name}</span>
                            {app.recommended && (
                              <Badge className="bg-green-500/10 text-green-600 border-green-500/20 text-xs">
                                –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è
                              </Badge>
                            )}
                          </div>
                          <Button size="sm" variant="outline" asChild>
                            <a href={app.link} target="_blank" rel="noopener noreferrer">
                              <ExternalLink className="w-3 h-3" />
                            </a>
                          </Button>
                        </div>
                      ))}
                    </div>
                  </div>

                  {/* Steps */}
                  <div>
                    <h4 className="font-medium text-foreground mb-2">–®–∞–≥–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:</h4>
                    <div className="space-y-2">
                      {platform.steps.map((step, index) => (
                        <div key={index} className="flex items-start space-x-3 p-2">
                          <div className="w-6 h-6 bg-telegram-blue rounded-full flex items-center justify-center text-white text-sm font-medium flex-shrink-0">
                            {index + 1}
                          </div>
                          <div className="text-sm text-foreground pt-1">{step}</div>
                        </div>
                      ))}
                    </div>
                  </div>

                  <Link to="/config">
                    <Button className="w-full bg-telegram-blue hover:bg-telegram-blue-dark">
                      –ü–æ–ª—É—á–∏—Ç—å VPN-—Å—Å—ã–ª–∫—É
                    </Button>
                  </Link>
                </CardContent>
              </Card>
            ))}
          </TabsContent>

          <TabsContent value="windows" className="space-y-4">
            {platforms.filter(p => ["windows", "macos", "linux"].includes(p.id)).map((platform) => (
              <Card key={platform.id} className="border-gray-100">
                <CardHeader>
                  <CardTitle className="text-lg text-foreground flex items-center">
                    <span className="text-2xl mr-3">{platform.icon}</span>
                    –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è {platform.name}
                  </CardTitle>
                </CardHeader>
                <CardContent className="space-y-4">
                  {/* Recommended Apps */}
                  <div>
                    <h4 className="font-medium text-foreground mb-2">–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:</h4>
                    <div className="space-y-2">
                      {platform.apps.map((app, index) => (
                        <div key={index} className="flex items-center justify-between p-2 bg-gray-50 rounded-lg">
                          <div className="flex items-center space-x-2">
                            <span className="font-medium">{app.name}</span>
                            {app.recommended && (
                              <Badge className="bg-green-500/10 text-green-600 border-green-500/20 text-xs">
                                –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è
                              </Badge>
                            )}
                          </div>
                          <Button size="sm" variant="outline" asChild>
                            <a href={app.link} target="_blank" rel="noopener noreferrer">
                              <ExternalLink className="w-3 h-3" />
                            </a>
                          </Button>
                        </div>
                      ))}
                    </div>
                  </div>

                  {/* Steps */}
                  <div>
                    <h4 className="font-medium text-foreground mb-2">–®–∞–≥–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:</h4>
                    <div className="space-y-2">
                      {platform.steps.map((step, index) => (
                        <div key={index} className="flex items-start space-x-3 p-2">
                          <div className="w-6 h-6 bg-telegram-blue rounded-full flex items-center justify-center text-white text-sm font-medium flex-shrink-0">
                            {index + 1}
                          </div>
                          <div className="text-sm text-foreground pt-1">{step}</div>
                        </div>
                      ))}
                    </div>
                  </div>

                  <Link to="/config">
                    <Button className="w-full bg-telegram-blue hover:bg-telegram-blue-dark">
                      –ü–æ–ª—É—á–∏—Ç—å VPN-—Å—Å—ã–ª–∫—É
                    </Button>
                  </Link>
                </CardContent>
              </Card>
            ))}
          </TabsContent>

          <TabsContent value="other" className="space-y-4">
            {/* Additional Platforms */}
            <Card className="border-gray-100">
              <CardHeader>
                <CardTitle className="text-lg text-foreground">üì° –î—Ä—É–≥–∏–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞</CardTitle>
                <CardDescription>
                  –î–æ–ø–æ–ª–Ω–∏—ÇÔøΩÔøΩ–ª—å–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –∏ —Å—Å—ã–ª–∫–∏
                </CardDescription>
              </CardHeader>
              <CardContent className="space-y-3">
                <Button variant="outline" className="w-full justify-start" asChild>
                  <a href="https://dkurokhtin.github.io/vpn-docs/#/android" target="_blank" rel="noopener noreferrer">
                    ü§ñ –ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è Android
                    <ExternalLink className="w-4 h-4 ml-auto" />
                  </a>
                </Button>
                <Button variant="outline" className="w-full justify-start" asChild>
                  <a href="https://dkurokhtin.github.io/vpn-docs/#/ios" target="_blank" rel="noopener noreferrer">
                    üçè –ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è iPhone
                    <ExternalLink className="w-4 h-4 ml-auto" />
                  </a>
                </Button>
                <Button variant="outline" className="w-full justify-start">
                  üåê –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–æ—É—Ç–µ—Ä–∞
                  <ExternalLink className="w-4 h-4 ml-auto" />
                </Button>
                <Button variant="outline" className="w-full justify-start">
                  üì∫ Smart TV –∏ –ø—Ä–∏—Å—Ç–∞–≤–∫–∏
                  <ExternalLink className="w-4 h-4 ml-auto" />
                </Button>
              </CardContent>
            </Card>
          </TabsContent>
        </Tabs>

        {/* Troubleshooting */}
        <Card className="border-gray-100">
          <CardHeader>
            <CardTitle className="text-lg text-foreground">üîß –†–µ—àÔøΩÔøΩ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º</CardTitle>
            <CardDescription>
              –ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã –∏ –∏—Ö —Ä–µ—à–µ–Ω–∏—è
            </CardDescription>
          </CardHeader>
          <CardContent className="space-y-3">
            {troubleshooting.map((item, index) => (
              <div key={index} className="p-3 bg-gray-50 rounded-lg">
                <div className="flex items-start space-x-3">
                  <span className="text-lg">{item.icon}</span>
                  <div>
                    <div className="font-medium text-foreground">{item.problem}</div>
                    <div className="text-sm text-muted-foreground mt-1">{item.solution}</div>
                  </div>
                </div>
              </div>
            ))}
          </CardContent>
        </Card>

        {/* Support Card */}
        <Card className="border-gray-100">
          <CardContent className="p-4 text-center">
            <div className="space-y-3">
              <div className="text-muted-foreground">–í—Å–µ –µ—â–µ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å?</div>
              <Link to="/support">
                <Button className="w-full bg-telegram-blue hover:bg-telegram-blue-dark">
                  üí¨ –°–≤—è–∑–∞—Ç—å—Å—è —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π
                </Button>
              </Link>
            </div>
          </CardContent>
        </Card>
      </div>

      <div className="h-6"></div>
    </div>
  );
}
