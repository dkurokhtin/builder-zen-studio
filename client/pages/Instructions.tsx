import React, { useState } from "react";
import { Link } from "react-router-dom";
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { 
  ArrowLeft,
  Download, 
  ExternalLink,
  PlayCircle,
  CheckCircle,
  Smartphone,
  Laptop,
  Wifi,
  HelpCircle,
  AlertTriangle,
  Zap,
  Shield
} from "lucide-react";

export default function Instructions() {
  const [selectedFaq, setSelectedFaq] = useState<number | null>(null);

  const platforms = [
    {
      id: "android",
      name: "Android",
      icon: "ü§ñ",
      color: "bg-green-500",
      apps: [
        { name: "v2rayNG", recommended: true, link: "https://play.google.com/store/apps/details?id=com.v2ray.ang" },
        { name: "Nekoray", recommended: false, link: "https://github.com/MatsuriDayo/nekoray/releases" }
      ],
      steps: [
        "–°–∫–∞—á–∞–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ v2rayNG –∏–∑ Google Play",
        "–û—Ç–∫—Ä–æ–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏ –Ω–∞–∂–º–∏—Ç–µ '+' –≤ –ø—Ä–∞–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É",
        "–í—ã–±–µ—Ä–∏—Ç–µ '–ò–º–ø–æ—Ä—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∏–∑ –±—É—Ñ–µ—Ä–∞ –æ–±–º–µ–Ω–∞'",
        "–°–∫–æ–ø–∏—Ä—É–π—Ç–µ VPN-—Å—Å—ã–ª–∫—É –∏ –≤—Å—Ç–∞–≤—å—Ç–µ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ",
        "–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∏ –≤—ã–±–µ—Ä–∏—Ç–µ '–ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è'"
      ]
    },
    {
      id: "ios",
      name: "iOS",
      icon: "üçè", 
      color: "bg-blue-500",
      apps: [
        { name: "FoXray", recommended: true, link: "https://apps.apple.com/app/foxray/id6448898396" },
        { name: "Streisand", recommended: false, link: "https://apps.apple.com/app/streisand/id6450534064" }
      ],
      steps: [
        "–£—Å—Ç–∞–Ω–æ–≤ÔøΩÔøΩ—Ç–µ FoXray –∏–∑ App Store",
        "–û—Ç–∫—Ä–æ–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏ –Ω–∞–∂–º–∏—Ç–µ '+' –∏–ª–∏ 'Add'",
        "–í—ã–±–µ—Ä–∏—Ç–µ 'Import from Clipboard' –∏–ª–∏ '–ò–º–ø–æ—Ä—Ç –∏–∑ –±—É—Ñ–µ—Ä–∞'",
        "–°–∫–æ–ø–∏—Ä—É–π—Ç–µ VPN-—Å—Å—ã–ª–∫—É –∏–∑ –±–æ—Ç–∞",
        "–ù–∞–∂–º–∏—Ç–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è"
      ]
    },
    {
      id: "windows",
      name: "Windows",
      icon: "üíª",
      color: "bg-blue-600",
      apps: [
        { name: "v2rayN", recommended: true, link: "https://github.com/2dust/v2rayN/releases" },
        { name: "Nekoray", recommended: false, link: "https://github.com/MatsuriDayo/nekoray/releases" }
      ],
      steps: [
        "–°–∫–∞—á–∞–π—Ç–µ v2rayN —Å GitHub (—Ñ–∞–π–ª v2rayN-Core.zip)",
        "–†–∞—Å–ø–∞–∫—É–π—Ç–µ –∞—Ä—Ö–∏–≤ –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ v2rayN.exe",
        "–ö–ª–∏–∫–Ω–∏—Ç–µ –ø—Ä–∞–≤–æ–π –∫–Ω–æ–ø–∫–æ–π –Ω–∞ –∑–Ω–∞—á–æ–∫ –≤ —Ç—Ä–µ–µ",
        "–í—ã–±–µ—Ä–∏—Ç–µ '–î–æ–±–∞–≤–∏—Ç—å —Å–µ—Ä–≤–µ—Ä' ‚Üí '–ò–º–ø–æ—Ä—Ç —Å—Å—ã–ª–∫–∏ –∏–∑ –±—É—Ñ–µ—Ä–∞ –æ–±–º–µ–Ω–∞'",
        "–°–∫–æ–ø–∏—Ä—É–π—Ç–µ VPN-—Å—Å—ã–ª–∫—É –∏ –Ω–∞–∂–º–∏—Ç–µ OK, –∑–∞—Ç–µ–º '–ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è'"
      ]
    },
    {
      id: "macos",
      name: "macOS", 
      icon: "üçé",
      color: "bg-gray-700",
      apps: [
        { name: "FoXray", recommended: true, link: "https://apps.apple.com/app/foxray/id6448898396" },
        { name: "V2rayU", recommended: false, link: "https://github.com/yanue/V2rayU/releases" }
      ],
      steps: [
        "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ FoXray –∏–∑ Mac App Store",
        "–û—Ç–∫—Ä–æ–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏ –Ω–∞–∂–º–∏—Ç–µ '+' –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–µ—Ä–≤–µ—Ä–∞",
        "–í—ã–±–µ—Ä–∏—Ç–µ 'Import from Clipboard'",
        "–°–∫–æ–ø–∏—Ä—É–π—Ç–µ VPN-—Å—Å—ã–ª–∫—É –∏–∑ Telegram –±–æ—Ç–∞",
        "–í—ã–±–µ—Ä–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä –∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è"
      ]
    },
    {
      id: "linux",
      name: "Linux",
      icon: "üêß",
      color: "bg-yellow-600",
      apps: [
        { name: "Nekoray", recommended: true, link: "https://github.com/MatsuriDayo/nekoray/releases" },
        { name: "v2ray-core", recommended: false, link: "https://github.com/v2fly/v2ray-core/releases" }
      ],
      steps: [
        "–°–∫–∞—á–∞–π—Ç–µ Nekoray AppImage —Å GitHub",
        "–°–¥–µ–ª–∞–π—Ç–µ —Ñ–∞–π–ª –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–º: chmod +x nekoray-*.AppImage",
        "–ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: ./nekoray-*.AppImage",
        "–ù–∞–∂–º–∏—Ç–µ 'Add' –∏ –≤—ã–±–µ—Ä–∏—Ç–µ 'Import from clipboard'",
        "–í—Å—Ç–∞–≤—å—Ç–µ VPN-—Å—Å—ã–ª–∫—É –∏ –Ω–∞–∂–º–∏—Ç–µ 'Start'"
      ]
    }
  ];

  const troubleshooting = [
    {
      id: "connection",
      problem: "–ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ VPN",
      severity: "high",
      icon: "üî¥",
      symptoms: [
        "VPN –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –æ—à–∏–±–∫—É –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏",
        "–ë–µ—Å–∫–æ–Ω–µ—á–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è",
        "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–≤–∏—Å–∞–µ—Ç –Ω–∞ —ç—Ç–∞–ø–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è"
      ],
      solutions: [
        {
          step: "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏",
          description: "–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞ –≤ —Ä–∞–∑–¥–µ–ª–µ '–ü–æ–¥–ø–∏—Å–∫–∞'",
          action: "checkSubscription"
        },
        {
          step: "–û–±–Ω–æ–≤–∏—Ç–µ VPN-—Å—Å—ã–ª–∫—É",
          description: "–ü–æ–ª—É—á–∏—Ç–µ –Ω–æ–≤—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –≤ —Ä–∞–∑–¥–µ–ª–µ 'VPN'",
          action: "refreshConfig"
        },
        {
          step: "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ",
          description: "–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –±–µ–∑ VPN",
          action: null
        },
        {
          step: "–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ",
          description: "–ü–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–∫—Ä–æ–π—Ç–µ –∏ –æ—Ç–∫—Ä–æ–π—Ç–µ VPN-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–Ω–æ–≤–æ",
          action: null
        }
      ]
    },
    {
      id: "speed",
      problem: "–ù–∏–∑–∫–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è",
      severity: "medium",
      icon: "üü°",
      symptoms: [
        "–ú–µ–¥–ª–µ–Ω–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ —Å–∞–π—Ç–æ–≤",
        "–í–∏–¥–µ–æ –±—É—Ñ–µ—Ä–∏–∑—É–µ—Ç—Å—è –∏–ª–∏ –Ω–µ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è",
        "–í—ã—Å–æ–∫–∏–π –ø–∏–Ω–≥ –≤ –∏–≥—Ä–∞—Ö –∏–ª–∏ –≤–∏–¥–µ–æ–∑–≤–æ–Ω–∫–∞—Ö"
      ],
      solutions: [
        {
          step: "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–∫–æ—Ä–æ—Å—Ç—å –±–µ–∑ VPN",
          description: "–û—Ç–∫–ª—é—á–∏—Ç–µ VPN –∏ –∏–∑–º–µ—Ä—å—Ç–µ —Å–∫–æ—Ä–æ—Å—Ç—å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞",
          action: null
        },
        {
          step: "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–π —Å–µ—Ä–≤–µ—Ä",
          description: "–ù–∞—à–∏ —Å–µ—Ä–≤–µ—Ä—ã –≤ –ù–∏–¥–µ—Ä–ª–∞–Ω–¥–∞—Ö –æ–±—ã—á–Ω–æ —Å–∞–º—ã–µ –±—ã—Å—Ç—Ä—ã–µ",
          action: null
        },
        {
          step: "–ò–∑–º–µ–Ω–∏—Ç–µ –ø—Ä–æ—Ç–æ–∫–æ–ª –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è",
          description: "–í –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–π –øÔøΩÔøΩ–æ—Ç–æ–∫–æ–ª",
          action: null
        },
        {
          step: "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∑–∞–≥—Ä—É–∑–∫—É —Å–µ—Ç–∏",
          description: "–í–æ–∑–º–æ–∂–Ω–æ, –≤–∞—à –ø—Ä–æ–≤–∞–π–¥–µ—Ä –æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ—Ç —Å–∫–æ—Ä–æ—Å—Ç—å",
          action: null
        }
      ]
    },
    {
      id: "blocked",
      problem: "VPN –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–º",
      severity: "high",
      icon: "üö´",
      symptoms: [
        "VPN –ø–æ–¥–∫–ª—é—á–∞–µ—Ç—Å—è, –Ω–æ —Å–∞–π—Ç—ã –Ω–µ –æ—Ç–∫—Ä—ã–≤–∞—é—Ç—Å—è",
        "–¢–æ–ª—å–∫–æ –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ —Å–∞–π—Ç—ã —Ä–∞–±–æ—Ç–∞—é—Ç —á–µ—Ä–µ–∑ VPN",
        "–ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏–µ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è VPN"
      ],
      solutions: [
        {
          step: "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–π –ø–æ—Ä—Ç",
          description: "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –ø–æ—Ä—Ç—ã (80, 8080, 2087)",
          action: null
        },
        {
          step: "–°–º–µ–Ω–∏—Ç–µ –ø—Ä–æ—Ç–æ–∫–æ–ª",
          description: "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ VLESS —á–µ—Ä–µ–∑ WebSocket –∏–ª–∏ –¥—Ä—É–≥–∏–µ –ø—Ä–æ—Ç–æ–∫–æ–ª—ã",
          action: null
        },
        {
          step: "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –æ–±—Ñ—É—Å–∫–∞—Ü–∏—é",
          description: "–í–∫–ª—é—á–∏—Ç–µ –º–∞—Å–∫–∏—Ä–æ–≤–∫—É —Ç—Ä–∞—Ñ–∏–∫–∞ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è",
          action: null
        },
        {
          step: "–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É",
          description: "–ú—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–ª—è –≤–∞—à–µ–≥–æ —Ä–µ–≥–∏–æ–Ω–∞",
          action: "contactSupport"
        }
      ]
    }
  ];

  return (
    <div className="min-h-screen bg-gradient-to-br from-telegram-blue/5 via-white to-green-500/5">
      {/* Header */}
      <div className="bg-white/80 backdrop-blur-sm border-b border-gray-100 sticky top-0 z-50">
        <div className="max-w-md mx-auto px-4 py-3">
          <div className="flex items-center justify-between">
            <div className="flex items-center space-x-3">
              <Link to="/">
                <Button variant="ghost" size="sm" className="p-2">
                  <ArrowLeft className="w-5 h-5" />
                </Button>
              </Link>
              <div>
                <h1 className="font-semibold text-gray-900">–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏</h1>
                <p className="text-xs text-gray-500">–ù–∞—Å—Ç—Ä–æ–π–∫–∞ VPN –Ω–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö</p>
              </div>
            </div>
          </div>
        </div>
      </div>

      <div className="max-w-md mx-auto px-4 py-6 space-y-6">
        
        {/* Quick Start Card */}
        <Card className="bg-gradient-to-r from-telegram-blue to-green-500 text-white border-0 shadow-lg">
          <CardHeader className="pb-4">
            <CardTitle className="text-white flex items-center">
              <PlayCircle className="w-5 h-5 mr-2" />
              –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç
            </CardTitle>
            <CardDescription className="text-white/80">
              –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–π–º—ë—Ç –≤—Å–µ–≥–æ 2-3 –º–∏–Ω—É—Ç—ã
            </CardDescription>
          </CardHeader>
          <CardContent className="pt-0">
            <div className="grid grid-cols-3 gap-2 text-center text-sm">
              <div className="flex flex-col items-center">
                <div className="w-8 h-8 bg-white/20 rounded-full flex items-center justify-center mb-1">
                  <Download className="w-4 h-4" />
                </div>
                <span>–°–∫–∞—á–∞—Ç—å</span>
              </div>
              <div className="flex flex-col items-center">
                <div className="w-8 h-8 bg-white/20 rounded-full flex items-center justify-center mb-1">
                  <Wifi className="w-4 h-4" />
                </div>
                <span>–ù–∞—Å—Ç—Ä–æ–∏—Ç—å</span>
              </div>
              <div className="flex flex-col items-center">
                <div className="w-8 h-8 bg-white/20 rounded-full flex items-center justify-center mb-1">
                  <CheckCircle className="w-4 h-4" />
                </div>
                <span>–ì–æ—Ç–æ–≤–æ</span>
              </div>
            </div>
          </CardContent>
        </Card>

        {/* Platform Selection */}
        <Tabs defaultValue="android" className="w-full">
          <TabsList className="grid w-full grid-cols-3 mb-6">
            <TabsTrigger value="android" className="text-xs">üì± –ú–æ–±–∏–ª—å–Ω—ã–µ</TabsTrigger>
            <TabsTrigger value="windows" className="text-xs">üíª –ö–æ–º–ø—å—é—Ç–µ—Ä</TabsTrigger>
            <TabsTrigger value="other" className="text-xs">üìñ –î—Ä—É–≥–∏–µ</TabsTrigger>
          </TabsList>

          <TabsContent value="android" className="space-y-4">
            {platforms.filter(p => ["android", "ios"].includes(p.id)).map((platform) => (
              <Card key={platform.id} className="border-gray-100">
                <CardHeader>
                  <CardTitle className="text-lg text-gray-900 flex items-center">
                    <span className="text-2xl mr-3">{platform.icon}</span>
                    –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è ÔøΩÔøΩ–ª—è {platform.name}
                  </CardTitle>
                  <CardDescription>
                    –ü–æ—à–∞–≥–æ–≤–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ VPN –Ω–∞ {platform.name}
                  </CardDescription>
                </CardHeader>
                <CardContent className="space-y-4">
                  {/* Recommended Apps */}
                  <div>
                    <h4 className="font-medium text-gray-900 mb-2">–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:</h4>
                    <div className="space-y-2">
                      {platform.apps.map((app, index) => (
                        <div key={index} className="flex items-center justify-between p-2 bg-gray-50 rounded-lg">
                          <div className="flex items-center space-x-2">
                            <span className="font-medium">{app.name}</span>
                            {app.recommended && (
                              <Badge className="bg-green-500/10 text-green-600 border-green-500/20 text-xs">
                                –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è
                              </Badge>
                            )}
                          </div>
                          <Button size="sm" variant="outline" asChild>
                            <a href={app.link} target="_blank" rel="noopener noreferrer">
                              <ExternalLink className="w-3 h-3" />
                            </a>
                          </Button>
                        </div>
                      ))}
                    </div>
                  </div>

                  {/* Steps */}
                  <div>
                    <h4 className="font-medium text-gray-900 mb-2">–®–∞–≥–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:</h4>
                    <div className="space-y-2">
                      {platform.steps.map((step, index) => (
                        <div key={index} className="flex items-start space-x-3 p-2">
                          <div className="w-6 h-6 bg-telegram-blue rounded-full flex items-center justify-center text-white text-sm font-medium flex-shrink-0">
                            {index + 1}
                          </div>
                          <div className="text-sm text-gray-700 pt-1">{step}</div>
                        </div>
                      ))}
                    </div>
                  </div>

                  <Link to="/config">
                    <Button className="w-full bg-telegram-blue hover:bg-telegram-blue-dark">
                      –ü–æ–ª—É—á–∏—Ç—å VPN-—Å—Å—ã–ª–∫—É
                    </Button>
                  </Link>
                </CardContent>
              </Card>
            ))}
          </TabsContent>

          <TabsContent value="windows" className="space-y-4">
            {platforms.filter(p => ["windows", "macos", "linux"].includes(p.id)).map((platform) => (
              <Card key={platform.id} className="border-gray-100">
                <CardHeader>
                  <CardTitle className="text-lg text-gray-900 flex items-center">
                    <span className="text-2xl mr-3">{platform.icon}</span>
                    –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è {platform.name}
                  </CardTitle>
                </CardHeader>
                <CardContent className="space-y-4">
                  {/* Recommended Apps */}
                  <div>
                    <h4 className="font-medium text-gray-900 mb-2">–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:</h4>
                    <div className="space-y-2">
                      {platform.apps.map((app, index) => (
                        <div key={index} className="flex items-center justify-between p-2 bg-gray-50 rounded-lg">
                          <div className="flex items-center space-x-2">
                            <span className="font-medium">{app.name}</span>
                            {app.recommended && (
                              <Badge className="bg-green-500/10 text-green-600 border-green-500/20 text-xs">
                                –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è
                              </Badge>
                            )}
                          </div>
                          <Button size="sm" variant="outline" asChild>
                            <a href={app.link} target="_blank" rel="noopener noreferrer">
                              <ExternalLink className="w-3 h-3" />
                            </a>
                          </Button>
                        </div>
                      ))}
                    </div>
                  </div>

                  {/* Steps */}
                  <div>
                    <h4 className="font-medium text-gray-900 mb-2">–®–∞–≥–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:</h4>
                    <div className="space-y-2">
                      {platform.steps.map((step, index) => (
                        <div key={index} className="flex items-start space-x-3 p-2">
                          <div className="w-6 h-6 bg-telegram-blue rounded-full flex items-center justify-center text-white text-sm font-medium flex-shrink-0">
                            {index + 1}
                          </div>
                          <div className="text-sm text-gray-700 pt-1">{step}</div>
                        </div>
                      ))}
                    </div>
                  </div>

                  <Link to="/config">
                    <Button className="w-full bg-telegram-blue hover:bg-telegram-blue-dark">
                      –ü–æ–ª—É—á–∏—Ç—å VPN-—Å—Å—ã–ª–∫—É
                    </Button>
                  </Link>
                </CardContent>
              </Card>
            ))}
          </TabsContent>

          <TabsContent value="other" className="space-y-4">
            {/* Additional Platforms */}
            <Card className="border-gray-100">
              <CardHeader>
                <CardTitle className="text-lg text-gray-900">üì° –î—Ä—É–≥–∏–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞</CardTitle>
                <CardDescription>
                  –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –∏ —Å—Å—ã–ª–∫–∏
                </CardDescription>
              </CardHeader>
              <CardContent className="space-y-3">
                <Button variant="outline" className="w-full justify-start" asChild>
                  <a href="https://dkurokhtin.github.io/vpn-docs/#/android" target="_blank" rel="noopener noreferrer">
                    ü§ñ –ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è Android
                    <ExternalLink className="w-4 h-4 ml-auto" />
                  </a>
                </Button>
                <Button variant="outline" className="w-full justify-start" asChild>
                  <a href="https://dkurokhtin.github.io/vpn-docs/#/ios" target="_blank" rel="noopener noreferrer">
                    üçè –ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è iPhone
                    <ExternalLink className="w-4 h-4 ml-auto" />
                  </a>
                </Button>
                <Button variant="outline" className="w-full justify-start">
                  üåê –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–æ—É—Ç–µ—Ä–∞
                  <ExternalLink className="w-4 h-4 ml-auto" />
                </Button>
                <Button variant="outline" className="w-full justify-start">
                  üì∫ Smart TV –∏ –ø—Ä–∏—Å—Ç–∞–≤–∫–∏
                  <ExternalLink className="w-4 h-4 ml-auto" />
                </Button>
              </CardContent>
            </Card>
          </TabsContent>
        </Tabs>

        {/* Advanced Troubleshooting */}
        <Card className="border-gray-100">
          <CardHeader>
            <CardTitle className="text-lg text-gray-900">üîß –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∏ —Ä–µ—à–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º</CardTitle>
            <CardDescription>
              –ü–æ—à–∞–≥–æ–≤—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è —Ä–µ—à–µ–Ω–∏—è —Ç–∏–ø–∏—á–Ω—ã—Ö –ø—Ä–æ–±–ª–µ–º
            </CardDescription>
          </CardHeader>
          <CardContent className="space-y-4">
            {troubleshooting.map((issue, index) => (
              <div key={index} className="border border-gray-200 rounded-lg overflow-hidden">
                <button
                  className="w-full p-4 text-left hover:bg-gray-50 transition-colors"
                  onClick={() => setSelectedFaq(selectedFaq === index ? null : index)}
                >
                  <div className="flex items-center justify-between">
                    <div className="flex items-center space-x-3">
                      <span className="text-xl">{issue.icon}</span>
                      <div>
                        <h3 className="font-medium text-gray-900">{issue.problem}</h3>
                        <div className="flex items-center space-x-2 mt-1">
                          <Badge 
                            className={`text-xs ${
                              issue.severity === 'high' 
                                ? 'bg-red-500/10 text-red-600 border-red-500/20' 
                                : 'bg-yellow-500/10 text-yellow-600 border-yellow-500/20'
                            }`}
                          >
                            {issue.severity === 'high' ? '–ö—Ä–∏—Ç–∏—á–Ω–æ' : '–°—Ä–µ–¥–Ω–µ'}
                          </Badge>
                        </div>
                      </div>
                    </div>
                    <HelpCircle className={`w-4 h-4 text-gray-400 transition-transform ${
                      selectedFaq === index ? 'rotate-180' : ''
                    }`} />
                  </div>
                </button>
                
                {selectedFaq === index && (
                  <div className="px-4 pb-4 border-t border-gray-100">
                    {/* Symptoms */}
                    <div className="mt-4">
                      <h4 className="font-medium text-gray-900 mb-2 flex items-center">
                        <AlertTriangle className="w-4 h-4 mr-2 text-red-500" />
                        –°–∏–º–ø—Ç–æ–º—ã:
                      </h4>
                      <ul className="space-y-1">
                        {issue.symptoms.map((symptom, sIndex) => (
                          <li key={sIndex} className="text-sm text-gray-600 flex items-start">
                            <span className="text-red-400 mr-2">‚Ä¢</span>
                            {symptom}
                          </li>
                        ))}
                      </ul>
                    </div>

                    {/* Solutions */}
                    <div className="mt-4">
                      <h4 className="font-medium text-gray-900 mb-3 flex items-center">
                        <Zap className="w-4 h-4 mr-2 text-green-500" />
                        –ü–æ—à–∞–≥–æ–≤–æ–µ —Ä–µ—à–µ–Ω–∏–µ:
                      </h4>
                      <div className="space-y-3">
                        {issue.solutions.map((solution, sIndex) => (
                          <div key={sIndex} className="bg-gray-50 p-3 rounded-lg">
                            <div className="flex items-start space-x-3">
                              <div className="w-6 h-6 bg-telegram-blue rounded-full flex items-center justify-center text-white text-xs font-medium flex-shrink-0">
                                {sIndex + 1}
                              </div>
                              <div className="flex-1">
                                <div className="font-medium text-gray-900">{solution.step}</div>
                                <div className="text-sm text-gray-600 mt-1">{solution.description}</div>
                                {solution.action && (
                                  <div className="mt-2">
                                    {solution.action === 'checkSubscription' && (
                                      <Link to="/subscription">
                                        <Button size="sm" variant="outline" className="text-xs">
                                          –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É
                                        </Button>
                                      </Link>
                                    )}
                                    {solution.action === 'refreshConfig' && (
                                      <Link to="/config">
                                        <Button size="sm" variant="outline" className="text-xs">
                                          –û–±–Ω–æ–≤–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
                                        </Button>
                                      </Link>
                                    )}
                                    {solution.action === 'contactSupport' && (
                                      <Link to="/support">
                                        <Button size="sm" className="text-xs bg-telegram-blue hover:bg-telegram-blue-dark">
                                          –°–≤—è–∑–∞—Ç—å—Å—è —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π
                                        </Button>
                                      </Link>
                                    )}
                                  </div>
                                )}
                              </div>
                            </div>
                          </div>
                        ))}
                      </div>
                    </div>

                    {/* Quick test */}
                    <div className="mt-4 p-3 bg-blue-50 rounded-lg">
                      <div className="flex items-start space-x-2">
                        <Shield className="w-4 h-4 text-blue-500 mt-0.5 flex-shrink-0" />
                        <div className="text-sm">
                          <div className="font-medium text-blue-700">–ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞</div>
                          <div className="text-blue-600 mt-1">
                            {issue.id === 'connection' && '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ VPN –ø–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —à–∞–≥–æ–≤'}
                            {issue.id === 'speed' && '–ü—Ä–æ–≤–µ–¥–∏—Ç–µ —Ç–µ—Å—Ç —Å–∫–æ—Ä–æ—Å—Ç–∏ –Ω–∞ speedtest.net —Å –≤–∫–ª—é—á–µ–Ω–Ω—ã–º VPN'}
                            {issue.id === 'blocked' && '–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Å–∞–π—Ç–æ–≤ –ø–æ—Å–ª–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π'}
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>
                )}
              </div>
            ))}
          </CardContent>
        </Card>

        {/* Support Card */}
        <Card className="border-gray-100">
          <CardContent className="p-4 text-center">
            <div className="space-y-3">
              <div className="text-gray-600">–í—Å–µ –µ—â–µ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å?</div>
              <Link to="/support">
                <Button className="w-full bg-telegram-blue hover:bg-telegram-blue-dark">
                  üí¨ –°–≤—è–∑–∞—Ç—å—Å—è —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π
                </Button>
              </Link>
            </div>
          </CardContent>
        </Card>
      </div>

      <div className="h-6"></div>
    </div>
  );
}
