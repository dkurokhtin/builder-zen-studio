import React, { useState } from "react";
import { Link } from "react-router-dom";
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { 
  ArrowLeft,
  MessageCircle,
  Phone,
  Mail,
  Clock,
  CheckCircle,
  HelpCircle,
  ExternalLink,
  Send,
  User,
  AlertCircle
} from "lucide-react";

export default function Support() {
  const [selectedFaq, setSelectedFaq] = useState<number | null>(null);

  const supportChannels = [
    {
      icon: MessageCircle,
      title: "Telegram —á–∞—Ç",
      description: "–ë—ã—Å—Ç—Ä—ã–π –æ—Ç–≤–µ—Ç –≤ —Ç–µ—á–µ–Ω–∏–µ 5 –º–∏–Ω—É—Ç",
      action: "–ù–∞–ø–∏—Å–∞—Ç—å –≤ —á–∞—Ç",
      link: "https://t.me/dkvpn_support",
      color: "bg-telegram-blue",
      available: true
    },
    {
      icon: Mail,
      title: "Email –ø–æ–¥–¥–µ—Ä–∂–∫–∞",
      description: "–û—Ç–≤–µ—Ç –≤ —Ç–µ—á–µ–Ω–∏–µ 2-4 —á–∞—Å–æ–≤",
      action: "–û—Ç–ø—Ä–∞–≤–∏—Ç—å email",
      link: "mailto:support@dkbestvpn.com",
      color: "bg-green-500",
      available: true
    },
    {
      icon: Phone,
      title: "–¢–µ–ª–µ—Ñ–æ–Ω",
      description: "–¢–æ–ª—å–∫–æ –¥–ª—è —Å—Ä–æ—á–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤",
      action: "–ü–æ–∑–≤–æ–Ω–∏—Ç—å",
      link: "tel:+79001234567",
      color: "bg-orange-500",
      available: false
    }
  ];

  const faqItems = [
    {
      question: "–ö–∞–∫ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å VPN –Ω–∞ Android?",
      answer: "–°–∫–∞—á–∞–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ v2rayNG –∏–∑ Google Play Store, –∑–∞—Ç–µ–º —Å–∫–æ–ø–∏—Ä—É–π—Ç–µ –≤–∞—à—É VPN-—Å—Å—ã–ª–∫—É –∏–∑ –±–æ—Ç–∞ –∏ –∏–º–ø–æ—Ä—Ç–∏—Ä—É–π—Ç–µ –µ—ë –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ. –ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ —Ä–∞–∑–¥–µ–ª–µ '–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏'."
    },
    {
      question: "–ü–æ—á–µ–º—É –Ω–∏–∑–∫–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è?",
      answer: "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–∞—à–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –±–µ–∑ VPN. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∏–ª–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ. –ï—Å–ª–∏ –ø—Ä–æ–±–ª–µ–º–∞ —ÅÔøΩÔøΩ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π."
    },
    {
      question: "–ö–∞–∫ –ø—Ä–æ–¥–ª–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É?",
      answer: "–ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª '–ü–æ–¥–ø–∏—Å–∫–∞' –≤ –±–æ—Ç–µ –∏–ª–∏ mini app, –≤—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π —Ç–∞—Ä–∏—Ñ–Ω—ã–π –ø–ª–∞–Ω –∏ –æ–ø–ª–∞—Ç–∏—Ç–µ –ª—é–±—ã–º —É–¥–æ–±–Ω—ã–º —Å–ø–æ—Å–æ–±–æ–º. –ü–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏."
    },
    {
      question: "VPN –Ω–µ –ø–æ–¥–∫–ª—é—á–∞–µ—Ç—Å—è, —á—Ç–æ –¥–µ–ª–∞—Ç—å?",
      answer: "1) –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–æ–¥–ø–∏—Å–∫–∏ 2) –£–±–µ–¥–∏—Ç–µ—Å—å –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç–∏ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —Å—Å—ã–ª–∫–∏ 3) –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ 4) –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ 5) –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É."
    },
    {
      question: "–ú–æ–∂–Ω–æ –ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö?",
      answer: "–î–∞, –æ–¥–Ω—É –ø–æ–¥–ø–∏—Å–∫—É –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–∞ –Ω–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤. –ü—Ä–æ—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –æ–¥–Ω—É –∏ —Ç—É –∂–µ VPN-—Å—Å—ã–ª–∫—É –Ω–∞ –≤—Å–µ—Ö –≤–∞—à–∏—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö."
    },
    {
      question: "–ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å –≤–æ–∑–≤—Ä–∞—Ç ÔøΩÔøΩ—Ä–µ–¥—Å—Ç–≤?",
      answer: "–ú—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º –≤–æ–∑–≤—Ä–∞—Ç –≤ —Ç–µ—á–µ–Ω–∏–µ 7 –¥–Ω–µ–π —Å –º–æ–º–µ–Ω—Ç–∞ –ø–æ–∫—É–ø–∫–∏ –ø—Ä–∏ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ–±–ª–µ–º–∞—Ö. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –ø—Ä–æ–±–ª–µ–º—ã."
    },
    {
      question: "–°–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –ª–∏ –ª–æ–≥–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏?",
      answer: "–ù–µ—Ç, –º—ã —Å–ª–µ–¥—É–µ–º –ø–æ–ª–∏—Ç–∏–∫–µ No-logs. –ú—ã –Ω–µ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–∞—à–∏—Ö –ø–æ—Å–µ—â—ë–Ω–Ω—ã—Ö —Å–∞–π—Ç–∞—Ö, IP-–∞–¥—Ä–µ—Å–∞—Ö –∏–ª–∏ –ª—é–±–æ–π –¥—Ä—É–≥–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ."
    },
    {
      question: "–í –∫–∞–∫–∏—Ö —Å—Ç—Ä–∞–Ω–∞—Ö –µ—Å—Ç—å —Å–µ—Ä–≤–µ—Ä—ã?",
      answer: "–£ –Ω–∞—Å –µ—Å—Ç—å —Å–µ—Ä–≤–µ—Ä—ã –≤ 15+ —Å—Ç—Ä–∞–Ω–∞—Ö: –ù–∏–¥–µ—Ä–ª–∞–Ω–¥—ã, –ì–µ—Ä–º–∞–Ω–∏—è, –°–®–ê, –ö–∞–Ω–∞–¥–∞, –Ø–ø–æ–Ω–∏—è, –°–∏–Ω–≥–∞–ø—É—Ä, –í–µ–ª–∏–∫–æ–±—Ä–∏—Ç–∞–Ω–∏—è, –§—Ä–∞–Ω—Ü–∏—è –∏ –¥—Ä—É–≥–∏–µ. –ú—ã —Ä–µ–≥—É–ª—è—Ä–Ω–æ –¥–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ –ª–æ–∫–∞—Ü–∏–∏."
    }
  ];

  const quickActions = [
    {
      title: "–ü—Ä–æ–±–ª–µ–º—ã —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º",
      description: "VPN –Ω–µ –ø–æ–¥–∫–ª—é—á–∞–µ—Ç—Å—è –∏–ª–∏ —á–∞—Å—Ç–æ –æ—Ç–∫–ª—é—á–∞–µ—Ç—Å—è",
      action: "–†–µ—à–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É",
      route: "/instructions"
    },
    {
      title: "–í–æ–ø—Ä–æ—Å—ã –ø–æ –æ–ø–ª–∞—Ç–µ",
      description: "–ü—Ä–æ–±–ª–µ–º—ã —Å –ø—Ä–æ–¥–ª–µ–Ω–∏–µ–º –∏–ª–∏ –≤–æ–∑–≤—Ä–∞—Ç–æ–º",
      action: "–ù–∞–ø–∏—Å–∞—Ç—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É",
      route: "#contact"
    },
    {
      title: "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤",
      description: "–ü–æ–º–æ—â—å —Å —É—Å—Ç–∞–Ω–æ–≤–∫–æ–π –Ω–∞ —Ä–∞–∑–Ω—ã–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã",
      action: "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏",
      route: "/instructions"
    }
  ];

  return (
    <div className="min-h-screen bg-gradient-to-br from-telegram-blue/5 via-white to-green-500/5">
      {/* Header */}
      <div className="bg-white/80 backdrop-blur-sm border-b border-gray-100 sticky top-0 z-50">
        <div className="max-w-md mx-auto px-4 py-3">
          <div className="flex items-center justify-between">
            <div className="flex items-center space-x-3">
              <Link to="/">
                <Button variant="ghost" size="sm" className="p-2">
                  <ArrowLeft className="w-5 h-5" />
                </Button>
              </Link>
              <div>
                <h1 className="font-semibold text-gray-900">–ü–æ–¥–¥–µ—Ä–∂–∫–∞</h1>
                <p className="text-xs text-gray-500">–ü–æ–º–æ—â—å 24/7</p>
              </div>
            </div>
            <Badge className="bg-green-500/10 text-green-600 border-green-500/20">
              <Clock className="w-3 h-3 mr-1" />
              –û–Ω–ª–∞–π–Ω
            </Badge>
          </div>
        </div>
      </div>

      <div className="max-w-md mx-auto px-4 py-6 space-y-6">
        
        {/* Support Status */}
        <Card className="bg-gradient-to-r from-telegram-blue to-green-500 text-white border-0 shadow-lg">
          <CardHeader className="pb-4">
            <CardTitle className="text-white flex items-center">
              <MessageCircle className="w-5 h-5 mr-2" />
              –ú—ã –≤—Å–µ–≥–¥–∞ –Ω–∞ —Å–≤—è–∑–∏!
            </CardTitle>
            <CardDescription className="text-white/80">
              –°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞: 5 –º–∏–Ω—É—Ç
            </CardDescription>
          </CardHeader>
          <CardContent className="pt-0">
            <div className="grid grid-cols-3 gap-2 text-center text-sm">
              <div className="flex flex-col items-center">
                <div className="w-8 h-8 bg-white/20 rounded-full flex items-center justify-center mb-1">
                  <Clock className="w-4 h-4" />
                </div>
                <span>24/7</span>
              </div>
              <div className="flex flex-col items-center">
                <div className="w-8 h-8 bg-white/20 rounded-full flex items-center justify-center mb-1">
                  <MessageCircle className="w-4 h-4" />
                </div>
                <span>–ë—ã—Å—Ç—Ä–æ</span>
              </div>
              <div className="flex flex-col items-center">
                <div className="w-8 h-8 bg-white/20 rounded-full flex items-center justify-center mb-1">
                  <User className="w-4 h-4" />
                </div>
                <span>–õ–∏—á–Ω–æ</span>
              </div>
            </div>
          </CardContent>
        </Card>

        {/* Quick Actions */}
        <div className="space-y-3">
          <h2 className="text-lg font-semibold text-gray-900">üöÄ –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è</h2>
          {quickActions.map((action, index) => (
            <Card key={index} className="border-gray-100 hover:shadow-md transition-shadow cursor-pointer">
              <CardContent className="p-4">
                <div className="flex items-center justify-between">
                  <div className="flex-1">
                    <h3 className="font-medium text-gray-900">{action.title}</h3>
                    <p className="text-sm text-gray-500 mt-1">{action.description}</p>
                  </div>
                  <Link to={action.route}>
                    <Button size="sm" variant="outline">
                      {action.action}
                    </Button>
                  </Link>
                </div>
              </CardContent>
            </Card>
          ))}
        </div>

        {/* Contact Methods */}
        <div className="space-y-3" id="contact">
          <h2 className="text-lg font-semibold text-gray-900">üí¨ –°–ø–æ—Å–æ–±—ã —Å–≤—è–∑–∏</h2>
          {supportChannels.map((channel, index) => (
            <Card key={index} className="border-gray-100">
              <CardContent className="p-4">
                <div className="flex items-center space-x-4">
                  <div className={`p-3 rounded-xl ${channel.color}`}>
                    <channel.icon className="w-5 h-5 text-white" />
                  </div>
                  <div className="flex-1">
                    <div className="flex items-center space-x-2">
                      <h3 className="font-medium text-gray-900">{channel.title}</h3>
                      {channel.available ? (
                        <Badge className="bg-green-500/10 text-green-600 border-green-500/20 text-xs">
                          –î–æ—Å—Ç—É–ø–Ω–æ
                        </Badge>
                      ) : (
                        <Badge className="bg-gray-500/10 text-gray-600 border-gray-500/20 text-xs">
                          –°–∫–æ—Ä–æ
                        </Badge>
                      )}
                    </div>
                    <p className="text-sm text-gray-500 mt-1">{channel.description}</p>
                  </div>
                  <Button 
                    size="sm" 
                    disabled={!channel.available}
                    asChild={channel.available}
                  >
                    {channel.available ? (
                      <a href={channel.link} target="_blank" rel="noopener noreferrer">
                        {channel.action}
                        <ExternalLink className="w-3 h-3 ml-1" />
                      </a>
                    ) : (
                      channel.action
                    )}
                  </Button>
                </div>
              </CardContent>
            </Card>
          ))}
        </div>

        {/* FAQ Section */}
        <div className="space-y-3">
          <h2 className="text-lg font-semibold text-gray-900">‚ùì –ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã</h2>
          <div className="space-y-2">
            {faqItems.map((item, index) => (
              <Card key={index} className="border-gray-100">
                <CardContent className="p-0">
                  <button
                    className="w-full p-4 text-left hover:bg-gray-50 transition-colors"
                    onClick={() => setSelectedFaq(selectedFaq === index ? null : index)}
                  >
                    <div className="flex items-center justify-between">
                      <h3 className="font-medium text-gray-900 pr-4">{item.question}</h3>
                      <HelpCircle className={`w-4 h-4 text-gray-400 flex-shrink-0 transition-transform ${
                        selectedFaq === index ? 'rotate-180' : ''
                      }`} />
                    </div>
                  </button>
                  {selectedFaq === index && (
                    <div className="px-4 pb-4">
                      <div className="pt-2 border-t border-gray-100">
                        <p className="text-sm text-gray-600 leading-relaxed">{item.answer}</p>
                      </div>
                    </div>
                  )}
                </CardContent>
              </Card>
            ))}
          </div>
        </div>

        {/* Emergency Contact */}
        <Card className="bg-orange-500/10 border-orange-500/20">
          <CardContent className="p-4">
            <div className="flex items-start space-x-3">
              <AlertCircle className="w-5 h-5 text-orange-500 flex-shrink-0 mt-0.5" />
              <div>
                <div className="font-medium text-orange-700">–°—Ä–æ—á–Ω–∞—è –ø—Ä–æ–±–ª–µ–º–∞?</div>
                <div className="text-sm text-orange-600 mt-1">
                  –ï—Å–ª–∏ —É –≤–∞—Å –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–±–ª–µ–º–∞ —Å –¥–æ—Å—Ç—É–ø–æ–º, –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞–º –≤ Telegram —á–∞—Ç —Å –ø–æ–º–µ—Ç–∫–æ–π "–°–†–û–ß–ù–û" - –º—ã –æ—Ç–≤–µ—Ç–∏–º –≤ —Ç–µ—á–µ–Ω–∏–µ 2 –º–∏–Ω—É—Ç.
                </div>
                <Button size="sm" className="mt-3 bg-orange-500 hover:bg-orange-600 text-white" asChild>
                  <a href="https://t.me/dkvpn_support" target="_blank" rel="noopener noreferrer">
                    <Send className="w-3 h-3 mr-1" />
                    –°—Ä–æ—á–Ω–∞—è —Å–≤—è–∑—å
                  </a>
                </Button>
              </div>
            </div>
          </CardContent>
        </Card>

        {/* Links */}
        <Card className="border-gray-100">
          <CardHeader>
            <CardTitle className="text-lg text-gray-900">üìö –ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏</CardTitle>
          </CardHeader>
          <CardContent className="space-y-2">
            <Button variant="outline" className="w-full justify-start" asChild>
              <Link to="/instructions">
                üìñ –ü–æ–¥—Ä–æ–±–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
              </Link>
            </Button>
            <Button variant="outline" className="w-full justify-start" asChild>
              <a href="https://dkurokhtin.github.io/vpn-docs" target="_blank" rel="noopener noreferrer">
                üåê –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –Ω–∞ —Å–∞–π—Ç–µ
                <ExternalLink className="w-4 h-4 ml-auto" />
              </a>
            </Button>
            <Button variant="outline" className="w-full justify-start">
              üìã –ü–æ–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏
            </Button>
            <Button variant="outline" className="w-full justify-start">
              üìù –£—Å–ª–æ–≤–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
            </Button>
          </CardContent>
        </Card>
      </div>

      <div className="h-6"></div>
    </div>
  );
}
